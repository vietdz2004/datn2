import React from "react";
import styles from "./OrderDetailModal.module.css";
import { CheckCircle, Cancel, LocalShipping, HourglassEmpty, ErrorOutline } from '@mui/icons-material';

// ===== H·ªÜ TH·ªêNG TR·∫†NG TH√ÅI ƒê∆†N GI·∫¢N =====
const STATUS_OPTIONS = [
  { value: "cho_xu_ly", label: "Ch·ªù x·ª≠ l√Ω", icon: <HourglassEmpty style={{fontSize:18,verticalAlign:'middle',color:'#64748b'}} />, emoji: "‚è≥" },
  { value: "da_xac_nhan", label: "ƒê√£ x√°c nh·∫≠n", icon: <CheckCircle style={{fontSize:18,verticalAlign:'middle',color:'#3b82f6'}} />, emoji: "‚úîÔ∏è" },
  { value: "dang_giao", label: "ƒêang giao h√†ng", icon: <LocalShipping style={{fontSize:18,verticalAlign:'middle',color:'#0ea5e9'}} />, emoji: "üöö" },
  { value: "da_giao", label: "ƒê√£ giao h√†ng", icon: <CheckCircle style={{fontSize:18,verticalAlign:'middle',color:'#10b981'}} />, emoji: "‚úÖ" },
  { value: "huy_boi_admin", label: "ƒê√£ h·ªßy", icon: <Cancel style={{fontSize:18,verticalAlign:'middle',color:'#dc2626'}} />, emoji: "‚ùå" }
];

const ORDER_STATUS_FLOW = {
  cho_xu_ly: ["da_xac_nhan", "huy_boi_admin"],
  da_xac_nhan: ["dang_giao", "huy_boi_admin"],
  dang_giao: ["da_giao"],
  da_giao: [],
  huy_boi_admin: []
};

const END_STATUSES = ["da_giao", "huy_boi_admin"];

export default function OrderActionPanel({
  newStatus,
  setNewStatus,
  actionLoading,
  onStatusUpdate,
  onApprove,
  onReject,
  error,
  trangThaiDonHang,
  allowedStatuses = [],
  reason = "",
  setReason = () => {}
}) {
  console.log('üîß OrderActionPanel - Tr·∫°ng th√°i hi·ªán t·∫°i:', trangThaiDonHang);
  console.log('üîß OrderActionPanel - Tr·∫°ng th√°i ƒë∆∞·ª£c ph√©p:', allowedStatuses);
  
  const disabled = END_STATUSES.includes(trangThaiDonHang);
  
  // L·ªçc c√°c option h·ª£p l·ªá d·ª±a tr√™n allowedStatuses n·∫øu c√≥, ng∆∞·ª£c l·∫°i d√πng logic flow
  let validOptions;
  if (allowedStatuses && allowedStatuses.length > 0) {
    validOptions = STATUS_OPTIONS.filter(opt =>
      opt.value === trangThaiDonHang || allowedStatuses.includes(opt.value)
    );
  } else {
    // Fallback v·ªÅ logic flow c≈© - cho ph√©p t·∫•t c·∫£ transitions h·ª£p l·ªá
    const allowedNextStatuses = ORDER_STATUS_FLOW[trangThaiDonHang] || [];
    validOptions = STATUS_OPTIONS.filter(opt =>
      opt.value === trangThaiDonHang || allowedNextStatuses.includes(opt.value)
    );
    
    // N·∫øu kh√¥ng c√≥ flow n√†o ƒë∆∞·ª£c ƒë·ªãnh nghƒ©a, cho ph√©p admin linh ho·∫°t ch·ªçn
    if (allowedNextStatuses.length === 0 && !END_STATUSES.includes(trangThaiDonHang)) {
      console.log('‚ö†Ô∏è Kh√¥ng c√≥ flow ƒë·ªãnh nghƒ©a, cho ph√©p t·∫•t c·∫£ options');
      validOptions = STATUS_OPTIONS;
    }
  }
  
  if (disabled) {
    validOptions = STATUS_OPTIONS.filter(opt => opt.value === trangThaiDonHang);
  }
  
  const currentStatusObj = STATUS_OPTIONS.find(opt => opt.value === trangThaiDonHang);
  const isInvalidStatus = !currentStatusObj && trangThaiDonHang; // Ch·ªâ invalid n·∫øu c√≥ gi√° tr·ªã nh∆∞ng kh√¥ng t√¨m th·∫•y
  const onlyOneOption = validOptions.length === 1 && validOptions[0].value === trangThaiDonHang;
  const isStatusChanged = newStatus !== trangThaiDonHang;
  const needsReason = (newStatus === 'cancelled' || newStatus === 'huy_boi_admin') && isStatusChanged;
  
  console.log('üîß validOptions:', validOptions.map(o => o.value));
  console.log('üîß disabled:', disabled, 'isInvalidStatus:', isInvalidStatus, 'onlyOneOption:', onlyOneOption);
  return (
    <div className={styles["order-modal-actions"]}>
      <div className={styles["order-modal-actions-title"]}>‚öôÔ∏è Qu·∫£n l√Ω ƒë∆°n h√†ng:</div>
      
      <div className={styles["order-modal-actions-row"]}>
        {onlyOneOption ? (
          <span style={{
            display:'inline-flex',
            alignItems:'center',
            gap:6,
            background:'#f3f4f6',
            padding:'8px 16px',
            borderRadius:6,
            fontWeight:500,
            color:'#555',
            minWidth:160
          }}>
            {currentStatusObj?.icon}
            {currentStatusObj?.label}
          </span>
        ) : (
          <select 
            value={newStatus} 
            onChange={e => setNewStatus(e.target.value)} 
            className={styles["order-modal-select"]} 
            disabled={disabled || validOptions.length === 0 || isInvalidStatus} 
            style={{minWidth:160, padding:'8px 12px', fontSize:15}}
          >
            {isInvalidStatus ? (
              <option value="" disabled style={{color:'#ef4444'}}>
                ‚ùå Tr·∫°ng th√°i kh√¥ng h·ª£p l·ªá: {trangThaiDonHang}
              </option>
            ) : validOptions.length === 0 ? (
              <option value="" disabled style={{color:'#888'}}>
                üîí ƒê∆°n h√†ng ƒë√£ k·∫øt th√∫c
              </option>
            ) : (
              validOptions.map(opt => (
                <option key={opt.value} value={opt.value} style={{padding:'6px 0'}}>
                  {opt.emoji} {opt.label}
                </option>
              ))
            )}
          </select>
        )}
        
        <button 
          onClick={onStatusUpdate} 
          disabled={
            actionLoading || 
            disabled || 
            validOptions.length === 0 || 
            isInvalidStatus || 
            onlyOneOption || 
            !isStatusChanged ||
            (needsReason && !reason.trim())
          } 
          className={styles["order-modal-btn"] + " " + styles["order-modal-btn-update"]} 
          style={{marginLeft:8}}
        >
          {actionLoading ? '‚è≥ ƒêang c·∫≠p nh·∫≠t...' : '‚úÖ C·∫≠p nh·∫≠t tr·∫°ng th√°i'}
        </button>
      </div>

      {/* Input l√Ω do cho tr·∫°ng th√°i h·ªßy */}
      {needsReason && (
        <div className={styles["order-modal-actions-row"]} style={{marginTop: 8}}>
          <textarea
            value={reason}
            onChange={e => setReason(e.target.value)}
            placeholder="Nh·∫≠p l√Ω do h·ªßy ƒë∆°n h√†ng..."
            className={styles["order-modal-textarea"]}
            rows={3}
            style={{
              width: '100%',
              padding: '8px 12px',
              border: '1px solid #d1d5db',
              borderRadius: '6px',
              fontSize: '14px',
              resize: 'vertical'
            }}
          />
        </div>
      )}

      {/* N√∫t duy·ªát/t·ª´ ch·ªëi h·ªßy */}
      {trangThaiDonHang === 'khach_yeu_cau_huy' && (
        <div className={styles["order-modal-actions-row"]}>
          <button 
            onClick={onApprove} 
            disabled={actionLoading} 
            className={styles["order-modal-btn"] + " " + styles["order-modal-btn-approve"]}
          >
            ‚úÖ Duy·ªát h·ªßy
          </button>
          <button 
            onClick={onReject} 
            disabled={actionLoading} 
            className={styles["order-modal-btn"] + " " + styles["order-modal-btn-reject"]}
          >
            ‚ùå T·ª´ ch·ªëi h·ªßy
          </button>
        </div>
      )}

      {error && (
        <div className={styles["order-modal-error"]} style={{
          color: '#dc2626',
          background: '#fef2f2',
          padding: '8px 12px',
          borderRadius: '6px',
          marginTop: '8px',
          fontSize: '14px'
        }}>
          {error}
        </div>
      )}
    </div>
  );
} 