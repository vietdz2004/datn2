import React, { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import styles from './HomePage.module.scss';
import BannerSlider from '../components/BannerSlider';
import CategoryMenu from '../components/CategoryMenu';
import HomeSection from '../components/HomeSection';
import ProductList from '../components/ProductList';
import SearchHero from '../components/SearchHero';
import { productAPI } from '../services/api';

const HomePage = () => {
  const navigate = useNavigate();
  const [discountProducts, setDiscountProducts] = useState([]);
  const [popularProducts, setPopularProducts] = useState([]);
  const [newProducts, setNewProducts] = useState([]);
  const [bestsellerProducts, setBestsellerProducts] = useState([]);
  const [categoryProductSections, setCategoryProductSections] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  // Fetch all data from server-side APIs
  useEffect(() => {
    const fetchData = async () => {
      try {
        setLoading(true);
        setError(null);
        console.log('üîÑ Fetching homepage data...');

        // Parallel API calls for optimal performance
        const [
          discountResponse, 
          popularResponse,
          newResponse,
          bestsellerResponse,
          categoryProductsResponse
        ] = await Promise.all([
          productAPI.getDiscountProducts({ limit: 8 }).catch(e => ({ data: { data: [] }, error: e })),
          productAPI.getPopularProducts({ limit: 8 }).catch(e => ({ data: { data: [] }, error: e })),
          productAPI.getNewProducts({ limit: 8 }).catch(e => ({ data: { data: [] }, error: e })),
          productAPI.getBestsellerProducts({ limit: 8 }).catch(e => ({ data: { data: [] }, error: e })),
          productAPI.getProductsByCategories({ limit: 6, shuffle: true }).catch(e => ({ data: { data: [] }, error: e }))
        ]);

        console.log('üìä API Responses loaded successfully');

        // Set data from server responses - Handle both formats
        const discountData = discountResponse.data?.data || discountResponse.data || [];
        const popularData = popularResponse.data?.data || popularResponse.data || [];
        const newData = newResponse.data?.data || newResponse.data || [];
        const bestsellerData = bestsellerResponse.data?.data || bestsellerResponse.data || [];
        const categoryProductSectionsData = categoryProductsResponse.data?.data || categoryProductsResponse.data || [];

        setDiscountProducts(discountData);
        setPopularProducts(popularData);
        setNewProducts(newData);
        setBestsellerProducts(bestsellerData);
        setCategoryProductSections(categoryProductSectionsData);

        console.log('‚úÖ Data loaded successfully:', {
          discountCount: discountData.length,
          popularCount: popularData.length,
          newCount: newData.length,
          bestsellerCount: bestsellerData.length,
          categoryProductSectionsCount: categoryProductSectionsData.length
        });

      } catch (err) {
        console.error('‚ùå Error fetching data:', err);
        setError('Kh√¥ng th·ªÉ t·∫£i d·ªØ li·ªáu. Vui l√≤ng th·ª≠ l·∫°i sau.');
      } finally {
        setLoading(false);
      }
    };

    fetchData();
  }, []);

  const handleProductClick = (product) => {
    navigate(`/products/${product.id_SanPham}`);
  };

  const handleQuickOrder = () => {
    alert('Vui l√≤ng g·ªçi hotline: 0123-456-789 ƒë·ªÉ ƒë·∫∑t h√†ng nhanh!');
  };

  const handleViewMore = (categoryId) => {
    navigate(`/products?category=${categoryId}`);
  };

  if (loading) {
    return (
      <div className={styles.loading}>
        <div className={styles.spinner}></div>
        <p>ƒêang t·∫£i d·ªØ li·ªáu...</p>
      </div>
    );
  }

  if (error) {
    return (
      <div className={styles.error}>
        <h3>C√≥ l·ªói x·∫£y ra</h3>
        <p>{error}</p>
        <button onClick={() => window.location.reload()}>Th·ª≠ l·∫°i</button>
      </div>
    );
  }

  return (
    <div className={styles.homePage}>
      {/* Banner Slider */}
      <BannerSlider />

      {/* Search Hero Section */}
      <SearchHero />

      {/* Quick Order Button */}
      <div className={styles.quickOrderSection}>
        <button 
          className={styles.quickOrderBtn}
          onClick={handleQuickOrder}
        >
          üìû ƒê·∫∑t H√†ng Nhanh
        </button>
      </div>

      {/* Main Content */}
      <div className={styles.mainContent}>
        
        {/* Discount Products Section */}
        {discountProducts.length > 0 && (
          <HomeSection 
            title="üî• S·∫£n ph·∫©m gi·∫£m gi√°" 
            subtitle="∆Øu ƒë√£i h·∫•p d·∫´n - S·ªë l∆∞·ª£ng c√≥ h·∫°n"
            onViewMore={() => navigate('/products?discount=true')}
          >
            <ProductList 
              products={discountProducts} 
              onProductClick={handleProductClick}
            />
          </HomeSection>
        )}

        {/* Popular Products Section */}
        {popularProducts.length > 0 && (
          <HomeSection 
            title="‚≠ê S·∫£n ph·∫©m ph·ªï bi·∫øn" 
            subtitle="ƒê∆∞·ª£c kh√°ch h√†ng y√™u th√≠ch nh·∫•t"
            onViewMore={() => navigate('/products?popular=true')}
          >
            <ProductList 
              products={popularProducts} 
              onProductClick={handleProductClick}
            />
          </HomeSection>
        )}

        {/* New Products Section */}
        {newProducts.length > 0 && (
          <HomeSection 
            title="üÜï S·∫£n ph·∫©m m·ªõi" 
            subtitle="B·ªô s∆∞u t·∫≠p m·ªõi nh·∫•t"
            onViewMore={() => navigate('/products?new=true')}
          >
            <ProductList 
              products={newProducts} 
              onProductClick={handleProductClick}
            />
          </HomeSection>
        )}

        {/* Bestseller Products Section */}
        {bestsellerProducts.length > 0 && (
          <HomeSection 
            title="üèÜ S·∫£n ph·∫©m b√°n ch·∫°y" 
            subtitle="Top s·∫£n ph·∫©m ƒë∆∞·ª£c mua nhi·ªÅu nh·∫•t"
            onViewMore={() => navigate('/products?bestseller=true')}
          >
            <ProductList 
              products={bestsellerProducts} 
              onProductClick={handleProductClick}
            />
          </HomeSection>
        )}

        {/* Category Sections - M·ªói danh m·ª•c l√† 1 section ri√™ng */}
        {categoryProductSections.map((categorySection) => (
          <HomeSection 
            key={categorySection.categoryId}
            title={`üå∫ ${categorySection.categoryName}`} 
            subtitle={`${categorySection.products.length} s·∫£n ph·∫©m ch·ªçn l·ªçc`}
            onViewMore={() => handleViewMore(categorySection.categoryId)}
          >
            <ProductList 
              products={categorySection.products} 
              onProductClick={handleProductClick}
            />
          </HomeSection>
        ))}

        {/* Show message if no products */}
        {discountProducts.length === 0 && 
         popularProducts.length === 0 && 
         newProducts.length === 0 && 
         bestsellerProducts.length === 0 && 
         categoryProductSections.length === 0 && (
          <div style={{ textAlign: 'center', padding: '60px 20px' }}>
            <h3>Kh√¥ng c√≥ s·∫£n ph·∫©m n√†o</h3>
            <p>Vui l√≤ng ki·ªÉm tra l·∫°i k·∫øt n·ªëi API ho·∫∑c database</p>
          </div>
        )}
      </div>
    </div>
  );
};

export default HomePage; 